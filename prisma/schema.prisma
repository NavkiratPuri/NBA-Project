// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model dbuser {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  email    String @unique
  password String @unique
}

model player {
  id            String  @id @default(auto()) @map("_id") @db.ObjectId
  Rk            Int?
  Player        String?
  Pos           String?
  Age           Int?
  Tm            String?
  G             Int?
  GS            Int?
  MP            Float?
  FG            Float?
  FGA           Float?
  FGPercent     Float?
  threeP        Float?
  threePA       Float?
  threePPercent Float?
  twoP          Float?
  twoPA         Float?
  twoPPercent   Float?
  eFGPercent    Float?
  FT            Float?
  FTA           Float?
  FTPercent     Float?
  ORB           Float?
  DRB           Float?
  TRB           Float?
  AST           Float?
  STL           Float?
  BLK           Float?
  TOV           Float?
  PF            Float?
  PTS           Float?
}

model team {
  id         String  @id @default(auto()) @map("_id") @db.ObjectId
  rk         Int?
  team       String?
  wins       Int?
  losses     Int?
  eastWins   Int?
  eastLosses Int?
  westWins   Int?
  westLosses Int?
  conference String?

  
}

model trivia {
  id            String  @id @default(auto()) @map("_id") @db.ObjectId
  question      String?
  optionA       String?
  optionB       String?
  optionC       String?
  optionD       String?
  correctAnswer String?
}

//new models for auth and custom profile testing

model AuthUser {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  email          String   @unique
  hashedPassword String
  favPlayerId    String?   
  favTeamId      String?   
  isAdmin        Boolean  @default(false)

//  favPlayer      Player   @relation(fields: [favPlayerId], references: [id])
//  favTeam        Team     @relation(fields: [favTeamId], references: [id])
}



// model Player {
//   id     String @id @default(auto()) @map("_id") @db.ObjectId
//   Player String
//   Pos    String
//   Tm     String @db.ObjectId

//   team   Team   @relation(fields: [Tm], references: [id])
//   users  AuthUser[]
// }

// model Team {
//   id     String  @id @default(auto()) @map("_id") @db.ObjectId
//   team   String
//   wins   Int
//   losses Int

//   players Player[]
//   users   AuthUser[]
// }
